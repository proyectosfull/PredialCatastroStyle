//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clases
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PredialEntities : DbContext
    {
        public PredialEntities()
            : base("name=PredialEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cAgenteFiscal> cAgenteFiscal { get; set; }
        public virtual DbSet<cBaseGravable> cBaseGravable { get; set; }
        public virtual DbSet<cBaseGravableH> cBaseGravableH { get; set; }
        public virtual DbSet<cBaseGravableMigracion> cBaseGravableMigracion { get; set; }
        public virtual DbSet<cBaseImpuesto> cBaseImpuesto { get; set; }
        public virtual DbSet<cBoton> cBoton { get; set; }
        public virtual DbSet<cCaja> cCaja { get; set; }
        public virtual DbSet<cCalle> cCalle { get; set; }
        public virtual DbSet<cColonia> cColonia { get; set; }
        public virtual DbSet<cConcepto> cConcepto { get; set; }
        public virtual DbSet<cConceptoOmisionPago> cConceptoOmisionPago { get; set; }
        public virtual DbSet<cCondominio> cCondominio { get; set; }
        public virtual DbSet<cContratoAgua> cContratoAgua { get; set; }
        public virtual DbSet<cContribuyente> cContribuyente { get; set; }
        public virtual DbSet<cControlSistema> cControlSistema { get; set; }
        public virtual DbSet<cCuotasPredio> cCuotasPredio { get; set; }
        public virtual DbSet<cDescuento> cDescuento { get; set; }
        public virtual DbSet<cDiaFestivo> cDiaFestivo { get; set; }
        public virtual DbSet<cDiferencia> cDiferencia { get; set; }
        public virtual DbSet<cError> cError { get; set; }
        public virtual DbSet<cExentoPago> cExentoPago { get; set; }
        public virtual DbSet<cFIEL> cFIEL { get; set; }
        public virtual DbSet<cIndicePrecio> cIndicePrecio { get; set; }
        public virtual DbSet<cMesa> cMesa { get; set; }
        public virtual DbSet<cParametroCobro> cParametroCobro { get; set; }
        public virtual DbSet<cParametroSistema> cParametroSistema { get; set; }
        public virtual DbSet<cPredio> cPredio { get; set; }
        public virtual DbSet<cPredioH> cPredioH { get; set; }
        public virtual DbSet<cPredioObservacion> cPredioObservacion { get; set; }
        public virtual DbSet<cProdServ> cProdServ { get; set; }
        public virtual DbSet<cRFC> cRFC { get; set; }
        public virtual DbSet<cRol> cRol { get; set; }
        public virtual DbSet<cSalarioMinimo> cSalarioMinimo { get; set; }
        public virtual DbSet<cStatusPredio> cStatusPredio { get; set; }
        public virtual DbSet<cTarifaDap> cTarifaDap { get; set; }
        public virtual DbSet<cTarifaLimpieza> cTarifaLimpieza { get; set; }
        public virtual DbSet<cTarifaRecargo> cTarifaRecargo { get; set; }
        public virtual DbSet<cTarifaRecoleccion> cTarifaRecoleccion { get; set; }
        public virtual DbSet<cTarifaZona> cTarifaZona { get; set; }
        public virtual DbSet<cTipoAsentamiento> cTipoAsentamiento { get; set; }
        public virtual DbSet<cTipoAvaluo> cTipoAvaluo { get; set; }
        public virtual DbSet<cTipoCobro> cTipoCobro { get; set; }
        public virtual DbSet<cTipoContribuyente> cTipoContribuyente { get; set; }
        public virtual DbSet<cTipoFase> cTipoFase { get; set; }
        public virtual DbSet<cTipoFaseDoc> cTipoFaseDoc { get; set; }
        public virtual DbSet<cTipoInmueble> cTipoInmueble { get; set; }
        public virtual DbSet<cTipoMovAvaluo> cTipoMovAvaluo { get; set; }
        public virtual DbSet<cTipoPago> cTipoPago { get; set; }
        public virtual DbSet<cTipoPredio> cTipoPredio { get; set; }
        public virtual DbSet<cTipoTramite> cTipoTramite { get; set; }
        public virtual DbSet<cTipoVialidad> cTipoVialidad { get; set; }
        public virtual DbSet<cUnidadMedida> cUnidadMedida { get; set; }
        public virtual DbSet<cUsoSuelo> cUsoSuelo { get; set; }
        public virtual DbSet<cUsuarios> cUsuarios { get; set; }
        public virtual DbSet<cValuador> cValuador { get; set; }
        public virtual DbSet<cVentana> cVentana { get; set; }
        public virtual DbSet<mRolBot> mRolBot { get; set; }
        public virtual DbSet<mUsuBot> mUsuBot { get; set; }
        public virtual DbSet<mUsuRol> mUsuRol { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tBitacora> tBitacora { get; set; }
        public virtual DbSet<tCajeroCaja> tCajeroCaja { get; set; }
        public virtual DbSet<tConfiguracionMesa> tConfiguracionMesa { get; set; }
        public virtual DbSet<tConvenio> tConvenio { get; set; }
        public virtual DbSet<tConvenioEdoCta> tConvenioEdoCta { get; set; }
        public virtual DbSet<tCoPropietario> tCoPropietario { get; set; }
        public virtual DbSet<tCorteCaja> tCorteCaja { get; set; }
        public virtual DbSet<tCorteCajaDenominacion> tCorteCajaDenominacion { get; set; }
        public virtual DbSet<tCorteCajaDetalle> tCorteCajaDetalle { get; set; }
        public virtual DbSet<tDescuentoAsignado> tDescuentoAsignado { get; set; }
        public virtual DbSet<tFacturaCancelacion> tFacturaCancelacion { get; set; }
        public virtual DbSet<tInternet> tInternet { get; set; }
        public virtual DbSet<tInternetDetalle> tInternetDetalle { get; set; }
        public virtual DbSet<tPredioLocalizacion> tPredioLocalizacion { get; set; }
        public virtual DbSet<tPrediosDescuento> tPrediosDescuento { get; set; }
        public virtual DbSet<tPredioVerificacion> tPredioVerificacion { get; set; }
        public virtual DbSet<tPrepoliza> tPrepoliza { get; set; }
        public virtual DbSet<tPrepolizaDetalle> tPrepolizaDetalle { get; set; }
        public virtual DbSet<tPrepolizaRecibo> tPrepolizaRecibo { get; set; }
        public virtual DbSet<tRecibo> tRecibo { get; set; }
        public virtual DbSet<tReciboDetalle> tReciboDetalle { get; set; }
        public virtual DbSet<tReciboMetodoPago> tReciboMetodoPago { get; set; }
        public virtual DbSet<tRequerimiento> tRequerimiento { get; set; }
        public virtual DbSet<tTemp> tTemp { get; set; }
        public virtual DbSet<tTramite> tTramite { get; set; }
        public virtual DbSet<tTramiteDetalle> tTramiteDetalle { get; set; }
        public virtual DbSet<cUsoCFDI> cUsoCFDI { get; set; }
        public virtual DbSet<tReciboFactura> tReciboFactura { get; set; }
        public virtual DbSet<tReciboFacturaCancelada> tReciboFacturaCancelada { get; set; }
        public virtual DbSet<vAnioPredialAnual> vAnioPredialAnual { get; set; }
        public virtual DbSet<vAntecedentePredio> vAntecedentePredio { get; set; }
        public virtual DbSet<vBaseGravable> vBaseGravable { get; set; }
        public virtual DbSet<vBaseGravableCorto> vBaseGravableCorto { get; set; }
        public virtual DbSet<vBitacora> vBitacora { get; set; }
        public virtual DbSet<vBuscarPredioContDom> vBuscarPredioContDom { get; set; }
        public virtual DbSet<vCajeros> vCajeros { get; set; }
        public virtual DbSet<vConfiguracionMesa> vConfiguracionMesa { get; set; }
        public virtual DbSet<vContribuyentes> vContribuyentes { get; set; }
        public virtual DbSet<vCortes> vCortes { get; set; }
        public virtual DbSet<vPadronPredio> vPadronPredio { get; set; }
        public virtual DbSet<vPadronPredioAnio> vPadronPredioAnio { get; set; }
        public virtual DbSet<vPermisoBoton> vPermisoBoton { get; set; }
        public virtual DbSet<vPredioMovimiento> vPredioMovimiento { get; set; }
        public virtual DbSet<vPredios> vPredios { get; set; }
        public virtual DbSet<vPrediosCarto> vPrediosCarto { get; set; }
        public virtual DbSet<vPrediosCorto> vPrediosCorto { get; set; }
        public virtual DbSet<vPrediosRezago> vPrediosRezago { get; set; }
        public virtual DbSet<vRecibo> vRecibo { get; set; }
        public virtual DbSet<vReciboDetalle> vReciboDetalle { get; set; }
        public virtual DbSet<vReciboMetodoPago> vReciboMetodoPago { get; set; }
        public virtual DbSet<vReciboReporteDet> vReciboReporteDet { get; set; }
        public virtual DbSet<vReportesIngresos> vReportesIngresos { get; set; }
        public virtual DbSet<vRequerimientos> vRequerimientos { get; set; }
        public virtual DbSet<vRequerimientosCompleto> vRequerimientosCompleto { get; set; }
        public virtual DbSet<vTabularDetalleConta> vTabularDetalleConta { get; set; }
        public virtual DbSet<vTabularIngresos> vTabularIngresos { get; set; }
        public virtual DbSet<vTabularIngresosGral> vTabularIngresosGral { get; set; }
        public virtual DbSet<vTramite> vTramite { get; set; }
        public virtual DbSet<vVentanaFiltro> vVentanaFiltro { get; set; }
        public virtual DbSet<vVentanasNivel2> vVentanasNivel2 { get; set; }
        public virtual DbSet<vVentanasNivel2Permisos> vVentanasNivel2Permisos { get; set; }
    
        [DbFunction("PredialEntities", "fnSplitString")]
        public virtual IQueryable<fnSplitString_Result> fnSplitString(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplitString_Result>("[PredialEntities].[fnSplitString](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual int pActualizaMasivo(string tabla, string idForaneo, string claves)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("tabla", tabla) :
                new ObjectParameter("tabla", typeof(string));
    
            var idForaneoParameter = idForaneo != null ?
                new ObjectParameter("IdForaneo", idForaneo) :
                new ObjectParameter("IdForaneo", typeof(string));
    
            var clavesParameter = claves != null ?
                new ObjectParameter("claves", claves) :
                new ObjectParameter("claves", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizaMasivo", tablaParameter, idForaneoParameter, clavesParameter);
        }
    
        public virtual ObjectResult<pAnualPredialP1_Result> pAnualPredialP1(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pAnualPredialP1_Result>("pAnualPredialP1", anioParameter);
        }
    
        public virtual ObjectResult<pAnualPredialP2_Result> pAnualPredialP2(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pAnualPredialP2_Result>("pAnualPredialP2", anioParameter);
        }
    
        public virtual ObjectResult<pAnualPredialP3_Result> pAnualPredialP3(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pAnualPredialP3_Result>("pAnualPredialP3", anioParameter);
        }
    
        public virtual ObjectResult<pAnualPredialP4_Result> pAnualPredialP4(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pAnualPredialP4_Result>("pAnualPredialP4", anioParameter);
        }
    
        public virtual ObjectResult<pAnualPredialP5_Result> pAnualPredialP5(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pAnualPredialP5_Result>("pAnualPredialP5", anioParameter);
        }
    
        public virtual int pConsultaBitacora(string user, string ventana, string clavePredial, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var ventanaParameter = ventana != null ?
                new ObjectParameter("ventana", ventana) :
                new ObjectParameter("ventana", typeof(string));
    
            var clavePredialParameter = clavePredial != null ?
                new ObjectParameter("clavePredial", clavePredial) :
                new ObjectParameter("clavePredial", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pConsultaBitacora", userParameter, ventanaParameter, clavePredialParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresos_Result> pReporteIngresos(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresos_Result>("pReporteIngresos", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresosConDescuento_Result> pReporteIngresosConDescuento(Nullable<int> idCajero, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idCajeroParameter = idCajero.HasValue ?
                new ObjectParameter("IdCajero", idCajero) :
                new ObjectParameter("IdCajero", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresosConDescuento_Result>("pReporteIngresosConDescuento", idCajeroParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresosConsulta_Result> pReporteIngresosConsulta(Nullable<int> idCajero, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idCajeroParameter = idCajero.HasValue ?
                new ObjectParameter("IdCajero", idCajero) :
                new ObjectParameter("IdCajero", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresosConsulta_Result>("pReporteIngresosConsulta", idCajeroParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresosPorConcepto_Result> pReporteIngresosPorConcepto(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresosPorConcepto_Result>("pReporteIngresosPorConcepto", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresosPorConceptoAgrupado_Result> pReporteIngresosPorConceptoAgrupado(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresosPorConceptoAgrupado_Result>("pReporteIngresosPorConceptoAgrupado", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresosPrepolizaConsulta_Result> pReporteIngresosPrepolizaConsulta(Nullable<int> idPrepoliza)
        {
            var idPrepolizaParameter = idPrepoliza.HasValue ?
                new ObjectParameter("IdPrepoliza", idPrepoliza) :
                new ObjectParameter("IdPrepoliza", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresosPrepolizaConsulta_Result>("pReporteIngresosPrepolizaConsulta", idPrepolizaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pReporteIngresosRecibos(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pReporteIngresosRecibos", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresosTabular_Result> pReporteIngresosTabular(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresosTabular_Result>("pReporteIngresosTabular", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<pReporteIngresosXcajero_Result> pReporteIngresosXcajero(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<bool> concetrado)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var concetradoParameter = concetrado.HasValue ?
                new ObjectParameter("Concetrado", concetrado) :
                new ObjectParameter("Concetrado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReporteIngresosXcajero_Result>("pReporteIngresosXcajero", fechaInicioParameter, fechaFinParameter, concetradoParameter);
        }
    
        public virtual ObjectResult<pVentanasPrimerNivel_Result> pVentanasPrimerNivel(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pVentanasPrimerNivel_Result>("pVentanasPrimerNivel", idUsuarioParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spCalculaImpuestoH_Result> spCalculaImpuestoH(Nullable<int> bimestreFin, Nullable<int> ejercicioFin, Nullable<bool> aplicaAnticipado, Nullable<bool> total)
        {
            var bimestreFinParameter = bimestreFin.HasValue ?
                new ObjectParameter("BimestreFin", bimestreFin) :
                new ObjectParameter("BimestreFin", typeof(int));
    
            var ejercicioFinParameter = ejercicioFin.HasValue ?
                new ObjectParameter("EjercicioFin", ejercicioFin) :
                new ObjectParameter("EjercicioFin", typeof(int));
    
            var aplicaAnticipadoParameter = aplicaAnticipado.HasValue ?
                new ObjectParameter("AplicaAnticipado", aplicaAnticipado) :
                new ObjectParameter("AplicaAnticipado", typeof(bool));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCalculaImpuestoH_Result>("spCalculaImpuestoH", bimestreFinParameter, ejercicioFinParameter, aplicaAnticipadoParameter, totalParameter);
        }
    
        public virtual ObjectResult<spCalculaImpuestoHactual_Result> spCalculaImpuestoHactual(Nullable<int> ejercicio, Nullable<bool> total)
        {
            var ejercicioParameter = ejercicio.HasValue ?
                new ObjectParameter("Ejercicio", ejercicio) :
                new ObjectParameter("Ejercicio", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCalculaImpuestoHactual_Result>("spCalculaImpuestoHactual", ejercicioParameter, totalParameter);
        }
    }
}
