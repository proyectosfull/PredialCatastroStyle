'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace facturainteligente2
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FI_TFDSoap", [Namespace]:="https://www.appfacturainteligente.com/WS-FI")>  _
    Partial Public Class FI_TFD
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private TimbrarCFDIPruebaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TimbrarCFDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelarCFDIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConfirmarRecepcionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerAcuseEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerAcuseCancelacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarComplementoTimbreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTimbrePorReferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEstadoComprobanteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraCBBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.GeneraRecibo.My.MySettings.Default.GeneraRecibo_facturainteligente2_FI_TFD
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event TimbrarCFDIPruebaCompleted As TimbrarCFDIPruebaCompletedEventHandler
        
        '''<remarks/>
        Public Event TimbrarCFDCompleted As TimbrarCFDCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelarCFDICompleted As CancelarCFDICompletedEventHandler
        
        '''<remarks/>
        Public Event ConfirmarRecepcionCompleted As ConfirmarRecepcionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerXMLCompleted As ObtenerXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerAcuseEnvioCompleted As ObtenerAcuseEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerAcuseCancelacionCompleted As ObtenerAcuseCancelacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarPasswordCompleted As CambiarPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarComplementoTimbreCompleted As ConsultarComplementoTimbreCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTimbrePorReferenciaCompleted As ConsultarTimbrePorReferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEstadoComprobanteCompleted As ConsultarEstadoComprobanteCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCreditosCompleted As ConsultarCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraCBBCompleted As GeneraCBBCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/TimbrarCFDIPrueba", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TimbrarCFDIPrueba(ByVal usuario As String, ByVal password As String, ByVal cadenaXML As String) As String()
            Dim results() As Object = Me.Invoke("TimbrarCFDIPrueba", New Object() {usuario, password, cadenaXML})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TimbrarCFDIPruebaAsync(ByVal usuario As String, ByVal password As String, ByVal cadenaXML As String)
            Me.TimbrarCFDIPruebaAsync(usuario, password, cadenaXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TimbrarCFDIPruebaAsync(ByVal usuario As String, ByVal password As String, ByVal cadenaXML As String, ByVal userState As Object)
            If (Me.TimbrarCFDIPruebaOperationCompleted Is Nothing) Then
                Me.TimbrarCFDIPruebaOperationCompleted = AddressOf Me.OnTimbrarCFDIPruebaOperationCompleted
            End If
            Me.InvokeAsync("TimbrarCFDIPrueba", New Object() {usuario, password, cadenaXML}, Me.TimbrarCFDIPruebaOperationCompleted, userState)
        End Sub
        
        Private Sub OnTimbrarCFDIPruebaOperationCompleted(ByVal arg As Object)
            If (Not (Me.TimbrarCFDIPruebaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TimbrarCFDIPruebaCompleted(Me, New TimbrarCFDIPruebaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/TimbrarCFD", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TimbrarCFD(ByVal usuario As String, ByVal password As String, ByVal cadenaXML As String, ByVal referencia As String) As String()
            Dim results() As Object = Me.Invoke("TimbrarCFD", New Object() {usuario, password, cadenaXML, referencia})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TimbrarCFDAsync(ByVal usuario As String, ByVal password As String, ByVal cadenaXML As String, ByVal referencia As String)
            Me.TimbrarCFDAsync(usuario, password, cadenaXML, referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TimbrarCFDAsync(ByVal usuario As String, ByVal password As String, ByVal cadenaXML As String, ByVal referencia As String, ByVal userState As Object)
            If (Me.TimbrarCFDOperationCompleted Is Nothing) Then
                Me.TimbrarCFDOperationCompleted = AddressOf Me.OnTimbrarCFDOperationCompleted
            End If
            Me.InvokeAsync("TimbrarCFD", New Object() {usuario, password, cadenaXML, referencia}, Me.TimbrarCFDOperationCompleted, userState)
        End Sub
        
        Private Sub OnTimbrarCFDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TimbrarCFDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TimbrarCFDCompleted(Me, New TimbrarCFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/CancelarCFDI", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelarCFDI(ByVal usuario As String, ByVal password As String, ByVal RFCEmisor As String, ByVal listaCFDI() As String, ByVal certificadoPKCS12_Base64 As String, ByVal passwordPKCS12 As String) As String()
            Dim results() As Object = Me.Invoke("CancelarCFDI", New Object() {usuario, password, RFCEmisor, listaCFDI, certificadoPKCS12_Base64, passwordPKCS12})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelarCFDIAsync(ByVal usuario As String, ByVal password As String, ByVal RFCEmisor As String, ByVal listaCFDI() As String, ByVal certificadoPKCS12_Base64 As String, ByVal passwordPKCS12 As String)
            Me.CancelarCFDIAsync(usuario, password, RFCEmisor, listaCFDI, certificadoPKCS12_Base64, passwordPKCS12, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelarCFDIAsync(ByVal usuario As String, ByVal password As String, ByVal RFCEmisor As String, ByVal listaCFDI() As String, ByVal certificadoPKCS12_Base64 As String, ByVal passwordPKCS12 As String, ByVal userState As Object)
            If (Me.CancelarCFDIOperationCompleted Is Nothing) Then
                Me.CancelarCFDIOperationCompleted = AddressOf Me.OnCancelarCFDIOperationCompleted
            End If
            Me.InvokeAsync("CancelarCFDI", New Object() {usuario, password, RFCEmisor, listaCFDI, certificadoPKCS12_Base64, passwordPKCS12}, Me.CancelarCFDIOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelarCFDIOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelarCFDICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelarCFDICompleted(Me, New CancelarCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ConfirmarRecepcion", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConfirmarRecepcion(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String) As String()
            Dim results() As Object = Me.Invoke("ConfirmarRecepcion", New Object() {Usuario, Password, UUID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConfirmarRecepcionAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String)
            Me.ConfirmarRecepcionAsync(Usuario, Password, UUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConfirmarRecepcionAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal userState As Object)
            If (Me.ConfirmarRecepcionOperationCompleted Is Nothing) Then
                Me.ConfirmarRecepcionOperationCompleted = AddressOf Me.OnConfirmarRecepcionOperationCompleted
            End If
            Me.InvokeAsync("ConfirmarRecepcion", New Object() {Usuario, Password, UUID}, Me.ConfirmarRecepcionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConfirmarRecepcionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConfirmarRecepcionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConfirmarRecepcionCompleted(Me, New ConfirmarRecepcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ObtenerXML", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerXML(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String) As String()
            Dim results() As Object = Me.Invoke("ObtenerXML", New Object() {Usuario, Password, UUID, RFCEmisor})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerXMLAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String)
            Me.ObtenerXMLAsync(Usuario, Password, UUID, RFCEmisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerXMLAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String, ByVal userState As Object)
            If (Me.ObtenerXMLOperationCompleted Is Nothing) Then
                Me.ObtenerXMLOperationCompleted = AddressOf Me.OnObtenerXMLOperationCompleted
            End If
            Me.InvokeAsync("ObtenerXML", New Object() {Usuario, Password, UUID, RFCEmisor}, Me.ObtenerXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerXMLCompleted(Me, New ObtenerXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ObtenerAcuseEnvio", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerAcuseEnvio(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String) As String()
            Dim results() As Object = Me.Invoke("ObtenerAcuseEnvio", New Object() {Usuario, Password, UUID, RFCEmisor})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerAcuseEnvioAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String)
            Me.ObtenerAcuseEnvioAsync(Usuario, Password, UUID, RFCEmisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerAcuseEnvioAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String, ByVal userState As Object)
            If (Me.ObtenerAcuseEnvioOperationCompleted Is Nothing) Then
                Me.ObtenerAcuseEnvioOperationCompleted = AddressOf Me.OnObtenerAcuseEnvioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerAcuseEnvio", New Object() {Usuario, Password, UUID, RFCEmisor}, Me.ObtenerAcuseEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerAcuseEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerAcuseEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerAcuseEnvioCompleted(Me, New ObtenerAcuseEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ObtenerAcuseCancelacion", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerAcuseCancelacion(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String) As String()
            Dim results() As Object = Me.Invoke("ObtenerAcuseCancelacion", New Object() {Usuario, Password, UUID, RFCEmisor})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerAcuseCancelacionAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String)
            Me.ObtenerAcuseCancelacionAsync(Usuario, Password, UUID, RFCEmisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerAcuseCancelacionAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal RFCEmisor As String, ByVal userState As Object)
            If (Me.ObtenerAcuseCancelacionOperationCompleted Is Nothing) Then
                Me.ObtenerAcuseCancelacionOperationCompleted = AddressOf Me.OnObtenerAcuseCancelacionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerAcuseCancelacion", New Object() {Usuario, Password, UUID, RFCEmisor}, Me.ObtenerAcuseCancelacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerAcuseCancelacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerAcuseCancelacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerAcuseCancelacionCompleted(Me, New ObtenerAcuseCancelacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/CambiarPassword", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarPassword(ByVal Usuario As String, ByVal passwordActual As String, ByVal passwordNuevo As String) As String()
            Dim results() As Object = Me.Invoke("CambiarPassword", New Object() {Usuario, passwordActual, passwordNuevo})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAsync(ByVal Usuario As String, ByVal passwordActual As String, ByVal passwordNuevo As String)
            Me.CambiarPasswordAsync(Usuario, passwordActual, passwordNuevo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAsync(ByVal Usuario As String, ByVal passwordActual As String, ByVal passwordNuevo As String, ByVal userState As Object)
            If (Me.CambiarPasswordOperationCompleted Is Nothing) Then
                Me.CambiarPasswordOperationCompleted = AddressOf Me.OnCambiarPasswordOperationCompleted
            End If
            Me.InvokeAsync("CambiarPassword", New Object() {Usuario, passwordActual, passwordNuevo}, Me.CambiarPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarPasswordCompleted(Me, New CambiarPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ConsultarComplementoTimbre", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarComplementoTimbre(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String) As String()
            Dim results() As Object = Me.Invoke("ConsultarComplementoTimbre", New Object() {Usuario, Password, UUID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarComplementoTimbreAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String)
            Me.ConsultarComplementoTimbreAsync(Usuario, Password, UUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarComplementoTimbreAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal userState As Object)
            If (Me.ConsultarComplementoTimbreOperationCompleted Is Nothing) Then
                Me.ConsultarComplementoTimbreOperationCompleted = AddressOf Me.OnConsultarComplementoTimbreOperationCompleted
            End If
            Me.InvokeAsync("ConsultarComplementoTimbre", New Object() {Usuario, Password, UUID}, Me.ConsultarComplementoTimbreOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarComplementoTimbreOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarComplementoTimbreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarComplementoTimbreCompleted(Me, New ConsultarComplementoTimbreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ConsultarTimbrePorReferencia", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTimbrePorReferencia(ByVal Usuario As String, ByVal Password As String, ByVal RFCEmisor As String, ByVal Referencia As String) As String()
            Dim results() As Object = Me.Invoke("ConsultarTimbrePorReferencia", New Object() {Usuario, Password, RFCEmisor, Referencia})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTimbrePorReferenciaAsync(ByVal Usuario As String, ByVal Password As String, ByVal RFCEmisor As String, ByVal Referencia As String)
            Me.ConsultarTimbrePorReferenciaAsync(Usuario, Password, RFCEmisor, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTimbrePorReferenciaAsync(ByVal Usuario As String, ByVal Password As String, ByVal RFCEmisor As String, ByVal Referencia As String, ByVal userState As Object)
            If (Me.ConsultarTimbrePorReferenciaOperationCompleted Is Nothing) Then
                Me.ConsultarTimbrePorReferenciaOperationCompleted = AddressOf Me.OnConsultarTimbrePorReferenciaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTimbrePorReferencia", New Object() {Usuario, Password, RFCEmisor, Referencia}, Me.ConsultarTimbrePorReferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTimbrePorReferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTimbrePorReferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTimbrePorReferenciaCompleted(Me, New ConsultarTimbrePorReferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ConsultarEstadoComprobante", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEstadoComprobante(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String) As String()
            Dim results() As Object = Me.Invoke("ConsultarEstadoComprobante", New Object() {Usuario, Password, UUID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEstadoComprobanteAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String)
            Me.ConsultarEstadoComprobanteAsync(Usuario, Password, UUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEstadoComprobanteAsync(ByVal Usuario As String, ByVal Password As String, ByVal UUID As String, ByVal userState As Object)
            If (Me.ConsultarEstadoComprobanteOperationCompleted Is Nothing) Then
                Me.ConsultarEstadoComprobanteOperationCompleted = AddressOf Me.OnConsultarEstadoComprobanteOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEstadoComprobante", New Object() {Usuario, Password, UUID}, Me.ConsultarEstadoComprobanteOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEstadoComprobanteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEstadoComprobanteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEstadoComprobanteCompleted(Me, New ConsultarEstadoComprobanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/ConsultarCreditos", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCreditos(ByVal Usuario As String, ByVal Password As String) As String()
            Dim results() As Object = Me.Invoke("ConsultarCreditos", New Object() {Usuario, Password})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCreditosAsync(ByVal Usuario As String, ByVal Password As String)
            Me.ConsultarCreditosAsync(Usuario, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCreditosAsync(ByVal Usuario As String, ByVal Password As String, ByVal userState As Object)
            If (Me.ConsultarCreditosOperationCompleted Is Nothing) Then
                Me.ConsultarCreditosOperationCompleted = AddressOf Me.OnConsultarCreditosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCreditos", New Object() {Usuario, Password}, Me.ConsultarCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCreditosCompleted(Me, New ConsultarCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.appfacturainteligente.com/WS-FI/GeneraCBB", RequestNamespace:="https://www.appfacturainteligente.com/WS-FI", ResponseNamespace:="https://www.appfacturainteligente.com/WS-FI", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraCBB(ByVal Usuario As String, ByVal Password As String, ByVal RFCEmisor As String, ByVal Referencia As String) As String()
            Dim results() As Object = Me.Invoke("GeneraCBB", New Object() {Usuario, Password, RFCEmisor, Referencia})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraCBBAsync(ByVal Usuario As String, ByVal Password As String, ByVal RFCEmisor As String, ByVal Referencia As String)
            Me.GeneraCBBAsync(Usuario, Password, RFCEmisor, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraCBBAsync(ByVal Usuario As String, ByVal Password As String, ByVal RFCEmisor As String, ByVal Referencia As String, ByVal userState As Object)
            If (Me.GeneraCBBOperationCompleted Is Nothing) Then
                Me.GeneraCBBOperationCompleted = AddressOf Me.OnGeneraCBBOperationCompleted
            End If
            Me.InvokeAsync("GeneraCBB", New Object() {Usuario, Password, RFCEmisor, Referencia}, Me.GeneraCBBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraCBBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraCBBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraCBBCompleted(Me, New GeneraCBBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub TimbrarCFDIPruebaCompletedEventHandler(ByVal sender As Object, ByVal e As TimbrarCFDIPruebaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TimbrarCFDIPruebaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub TimbrarCFDCompletedEventHandler(ByVal sender As Object, ByVal e As TimbrarCFDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TimbrarCFDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub CancelarCFDICompletedEventHandler(ByVal sender As Object, ByVal e As CancelarCFDICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelarCFDICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ConfirmarRecepcionCompletedEventHandler(ByVal sender As Object, ByVal e As ConfirmarRecepcionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConfirmarRecepcionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ObtenerXMLCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ObtenerAcuseEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerAcuseEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerAcuseEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ObtenerAcuseCancelacionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerAcuseCancelacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerAcuseCancelacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub CambiarPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ConsultarComplementoTimbreCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarComplementoTimbreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarComplementoTimbreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ConsultarTimbrePorReferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTimbrePorReferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTimbrePorReferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ConsultarEstadoComprobanteCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEstadoComprobanteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEstadoComprobanteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub ConsultarCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub GeneraCBBCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraCBBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraCBBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
