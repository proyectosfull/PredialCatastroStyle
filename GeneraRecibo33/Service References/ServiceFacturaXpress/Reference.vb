'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace ServiceFacturaXpress
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="urn:ws_api", ConfigurationName:="ServiceFacturaXpress.ServicioTimbradoWSPortType")>  _
    Public Interface ServicioTimbradoWSPortType
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarCFDI", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function consultarCFDI(ByVal apikey As String, ByVal uuid As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaConsultarCFDI
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarCFDI", ReplyAction:="*")>  _
        Function consultarCFDIAsync(ByVal apikey As String, ByVal uuid As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaConsultarCFDI)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrar(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar", ReplyAction:="*")>  _
        Function timbrarAsync(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar3", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrar3(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar3", ReplyAction:="*")>  _
        Function timbrar3Async(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar3", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarTFD(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar3", ReplyAction:="*")>  _
        Function timbrarTFDAsync(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar3", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarConSello(ByVal apikey As String, ByVal xmlCFDI As String, ByVal keyPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrar3", ReplyAction:="*")>  _
        Function timbrarConSelloAsync(ByVal apikey As String, ByVal xmlCFDI As String, ByVal keyPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarJSON", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarJSON(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarJSON", ReplyAction:="*")>  _
        Function timbrarJSONAsync(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarJSON2", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarJSON2(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarJSON2", ReplyAction:="*")>  _
        Function timbrarJSON2Async(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarJSON3", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarJSON3(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarJSON3", ReplyAction:="*")>  _
        Function timbrarJSON3Async(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarTXT", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarTXT(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarTXT", ReplyAction:="*")>  _
        Function timbrarTXTAsync(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarTXT2", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarTXT2(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String, ByVal logoB64 As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarTXT2", ReplyAction:="*")>  _
        Function timbrarTXT2Async(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String, ByVal logoB64 As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarTXT3", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarTXT3(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarTXT3", ReplyAction:="*")>  _
        Function timbrarTXT3Async(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelar", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function cancelar(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaCancelar
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelar", ReplyAction:="*")>  _
        Function cancelarAsync(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelar2", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function cancelar2(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaCancelar
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelar2", ReplyAction:="*")>  _
        Function cancelar2Async(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarPFX", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function cancelarPFX(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaCancelar
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarPFX", ReplyAction:="*")>  _
        Function cancelarPFXAsync(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarPFX2", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function cancelarPFX2(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaCancelar
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarPFX2", ReplyAction:="*")>  _
        Function cancelarPFX2Async(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarEstadoSAT", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function consultarEstadoSAT(ByVal apikey As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaEstatusSAT
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarEstadoSAT", ReplyAction:="*")>  _
        Function consultarEstadoSATAsync(ByVal apikey As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaEstatusSAT)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarCreditosDisponibles", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function consultarCreditosDisponibles(ByVal apikey As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaCreditos
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarCreditosDisponibles", ReplyAction:="*")>  _
        Function consultarCreditosDisponiblesAsync(ByVal apikey As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCreditos)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarCfdisRelacionados", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function consultarCfdisRelacionados(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal rfcEmisor As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaRelacionados
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarCfdisRelacionados", ReplyAction:="*")>  _
        Function consultarCfdisRelacionadosAsync(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal rfcEmisor As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaRelacionados)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarAutorizacionesPendientes", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function consultarAutorizacionesPendientes(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaPendientes
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#consultarAutorizacionesPendientes", ReplyAction:="*")>  _
        Function consultarAutorizacionesPendientesAsync(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaPendientes)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#autorizarCancelacion", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function autorizarCancelacion(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal respuesta As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaAutorizar
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#autorizarCancelacion", ReplyAction:="*")>  _
        Function autorizarCancelacionAsync(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal respuesta As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaAutorizar)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarRetencion", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarRetencion(ByVal apikey As String, ByVal xml As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarRetencion", ReplyAction:="*")>  _
        Function timbrarRetencionAsync(ByVal apikey As String, ByVal xml As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarRetencionTFD", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarRetencionTFD(ByVal apikey As String, ByVal xml As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarRetencionTFD", ReplyAction:="*")>  _
        Function timbrarRetencionTFDAsync(ByVal apikey As String, ByVal xml As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarRetencionJSON", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarRetencionJSON(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbrado
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarRetencionJSON", ReplyAction:="*")>  _
        Function timbrarRetencionJSONAsync(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarRetencionCSD", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function cancelarRetencionCSD(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal rfcEmisor As String, ByVal uuid As String, ByVal motivo As String, ByVal folioSustitucion As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaCancelar
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarRetencionCSD", ReplyAction:="*")>  _
        Function cancelarRetencionCSDAsync(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal rfcEmisor As String, ByVal uuid As String, ByVal motivo As String, ByVal folioSustitucion As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarSP", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function timbrarSP(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaTimbradoSP
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#timbrarSP", ReplyAction:="*")>  _
        Function timbrarSPAsync(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbradoSP)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarSP", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function cancelarSP(ByVal apikey As String, ByVal rfcEmisor As String, ByVal uuid As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaCancelar
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#cancelarSP", ReplyAction:="*")>  _
        Function cancelarSPAsync(ByVal apikey As String, ByVal rfcEmisor As String, ByVal uuid As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar)
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#validar", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true, Use:=System.ServiceModel.OperationFormatUse.Encoded)>  _
        Function validar(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> ServiceFacturaXpress.RespuestaValidacion
        
        <System.ServiceModel.OperationContractAttribute(Action:="urn:ServicioTimbradoWS#validar", ReplyAction:="*")>  _
        Function validarAsync(ByVal apikey As String, ByVal xmlCFDI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaValidacion)
    End Interface
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaConsultarCFDI
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaValidacion
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaTimbradoSP
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaAutorizar
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaPendientes
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaRelacionados
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaCreditos
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As Integer
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As Integer
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaEstatusSAT
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codigoEstatusField As String
        
        Private esCancelableField As String
        
        Private estadoField As String
        
        Private estatusCancelacionField As String
        
        '''<remarks/>
        Public Property CodigoEstatus() As String
            Get
                Return Me.codigoEstatusField
            End Get
            Set
                Me.codigoEstatusField = value
                Me.RaisePropertyChanged("CodigoEstatus")
            End Set
        End Property
        
        '''<remarks/>
        Public Property EsCancelable() As String
            Get
                Return Me.esCancelableField
            End Get
            Set
                Me.esCancelableField = value
                Me.RaisePropertyChanged("EsCancelable")
            End Set
        End Property
        
        '''<remarks/>
        Public Property Estado() As String
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
                Me.RaisePropertyChanged("Estado")
            End Set
        End Property
        
        '''<remarks/>
        Public Property EstatusCancelacion() As String
            Get
                Return Me.estatusCancelacionField
            End Get
            Set
                Me.estatusCancelacionField = value
                Me.RaisePropertyChanged("EstatusCancelacion")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaCancelar
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        Private statusField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
                Me.RaisePropertyChanged("status")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:ws_api")>  _
    Partial Public Class RespuestaTimbrado
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codeField As String
        
        Private messageField As String
        
        Private dataField As String
        
        '''<remarks/>
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
                Me.RaisePropertyChanged("code")
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ServicioTimbradoWSPortTypeChannel
        Inherits ServiceFacturaXpress.ServicioTimbradoWSPortType, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ServicioTimbradoWSPortTypeClient
        Inherits System.ServiceModel.ClientBase(Of ServiceFacturaXpress.ServicioTimbradoWSPortType)
        Implements ServiceFacturaXpress.ServicioTimbradoWSPortType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function consultarCFDI(ByVal apikey As String, ByVal uuid As String) As ServiceFacturaXpress.RespuestaConsultarCFDI Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarCFDI
            Return MyBase.Channel.consultarCFDI(apikey, uuid)
        End Function
        
        Public Function consultarCFDIAsync(ByVal apikey As String, ByVal uuid As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaConsultarCFDI) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarCFDIAsync
            Return MyBase.Channel.consultarCFDIAsync(apikey, uuid)
        End Function
        
        Public Function timbrar(ByVal apikey As String, ByVal xmlCFDI As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrar
            Return MyBase.Channel.timbrar(apikey, xmlCFDI)
        End Function
        
        Public Function timbrarAsync(ByVal apikey As String, ByVal xmlCFDI As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarAsync
            Return MyBase.Channel.timbrarAsync(apikey, xmlCFDI)
        End Function
        
        Public Function timbrar3(ByVal apikey As String, ByVal xmlCFDI As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrar3
            Return MyBase.Channel.timbrar3(apikey, xmlCFDI)
        End Function
        
        Public Function timbrar3Async(ByVal apikey As String, ByVal xmlCFDI As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrar3Async
            Return MyBase.Channel.timbrar3Async(apikey, xmlCFDI)
        End Function
        
        Public Function timbrarTFD(ByVal apikey As String, ByVal xmlCFDI As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTFD
            Return MyBase.Channel.timbrarTFD(apikey, xmlCFDI)
        End Function
        
        Public Function timbrarTFDAsync(ByVal apikey As String, ByVal xmlCFDI As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTFDAsync
            Return MyBase.Channel.timbrarTFDAsync(apikey, xmlCFDI)
        End Function
        
        Public Function timbrarConSello(ByVal apikey As String, ByVal xmlCFDI As String, ByVal keyPEM As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarConSello
            Return MyBase.Channel.timbrarConSello(apikey, xmlCFDI, keyPEM)
        End Function
        
        Public Function timbrarConSelloAsync(ByVal apikey As String, ByVal xmlCFDI As String, ByVal keyPEM As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarConSelloAsync
            Return MyBase.Channel.timbrarConSelloAsync(apikey, xmlCFDI, keyPEM)
        End Function
        
        Public Function timbrarJSON(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarJSON
            Return MyBase.Channel.timbrarJSON(apikey, jsonB64, keyPEM, cerPEM)
        End Function
        
        Public Function timbrarJSONAsync(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarJSONAsync
            Return MyBase.Channel.timbrarJSONAsync(apikey, jsonB64, keyPEM, cerPEM)
        End Function
        
        Public Function timbrarJSON2(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarJSON2
            Return MyBase.Channel.timbrarJSON2(apikey, jsonB64, keyPEM, cerPEM, plantilla)
        End Function
        
        Public Function timbrarJSON2Async(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarJSON2Async
            Return MyBase.Channel.timbrarJSON2Async(apikey, jsonB64, keyPEM, cerPEM, plantilla)
        End Function
        
        Public Function timbrarJSON3(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarJSON3
            Return MyBase.Channel.timbrarJSON3(apikey, jsonB64, keyPEM, cerPEM)
        End Function
        
        Public Function timbrarJSON3Async(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarJSON3Async
            Return MyBase.Channel.timbrarJSON3Async(apikey, jsonB64, keyPEM, cerPEM)
        End Function
        
        Public Function timbrarTXT(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTXT
            Return MyBase.Channel.timbrarTXT(apikey, txtB64, keyPEM, cerPEM)
        End Function
        
        Public Function timbrarTXTAsync(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTXTAsync
            Return MyBase.Channel.timbrarTXTAsync(apikey, txtB64, keyPEM, cerPEM)
        End Function
        
        Public Function timbrarTXT2(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String, ByVal logoB64 As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTXT2
            Return MyBase.Channel.timbrarTXT2(apikey, txtB64, keyPEM, cerPEM, plantilla, logoB64)
        End Function
        
        Public Function timbrarTXT2Async(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String, ByVal logoB64 As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTXT2Async
            Return MyBase.Channel.timbrarTXT2Async(apikey, txtB64, keyPEM, cerPEM, plantilla, logoB64)
        End Function
        
        Public Function timbrarTXT3(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTXT3
            Return MyBase.Channel.timbrarTXT3(apikey, txtB64, keyPEM, cerPEM)
        End Function
        
        Public Function timbrarTXT3Async(ByVal apikey As String, ByVal txtB64 As String, ByVal keyPEM As String, ByVal cerPEM As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarTXT3Async
            Return MyBase.Channel.timbrarTXT3Async(apikey, txtB64, keyPEM, cerPEM)
        End Function
        
        Public Function cancelar(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As ServiceFacturaXpress.RespuestaCancelar Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelar
            Return MyBase.Channel.cancelar(apikey, keyCSD, cerCSD, passCSD, uuid, rfcEmisor, rfcReceptor, total)
        End Function
        
        Public Function cancelarAsync(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarAsync
            Return MyBase.Channel.cancelarAsync(apikey, keyCSD, cerCSD, passCSD, uuid, rfcEmisor, rfcReceptor, total)
        End Function
        
        Public Function cancelar2(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As ServiceFacturaXpress.RespuestaCancelar Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelar2
            Return MyBase.Channel.cancelar2(apikey, keyCSD, cerCSD, passCSD, uuid, rfcEmisor, rfcReceptor, total, motivo, folioSustitucion)
        End Function
        
        Public Function cancelar2Async(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelar2Async
            Return MyBase.Channel.cancelar2Async(apikey, keyCSD, cerCSD, passCSD, uuid, rfcEmisor, rfcReceptor, total, motivo, folioSustitucion)
        End Function
        
        Public Function cancelarPFX(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As ServiceFacturaXpress.RespuestaCancelar Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarPFX
            Return MyBase.Channel.cancelarPFX(apikey, filePFX, passPFX, uuid, rfcEmisor, rfcReceptor, total)
        End Function
        
        Public Function cancelarPFXAsync(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarPFXAsync
            Return MyBase.Channel.cancelarPFXAsync(apikey, filePFX, passPFX, uuid, rfcEmisor, rfcReceptor, total)
        End Function
        
        Public Function cancelarPFX2(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As ServiceFacturaXpress.RespuestaCancelar Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarPFX2
            Return MyBase.Channel.cancelarPFX2(apikey, filePFX, passPFX, uuid, rfcEmisor, rfcReceptor, total, motivo, folioSustitucion)
        End Function
        
        Public Function cancelarPFX2Async(ByVal apikey As String, ByVal filePFX As String, ByVal passPFX As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As Double, ByVal motivo As String, ByVal folioSustitucion As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarPFX2Async
            Return MyBase.Channel.cancelarPFX2Async(apikey, filePFX, passPFX, uuid, rfcEmisor, rfcReceptor, total, motivo, folioSustitucion)
        End Function
        
        Public Function consultarEstadoSAT(ByVal apikey As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As String) As ServiceFacturaXpress.RespuestaEstatusSAT Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarEstadoSAT
            Return MyBase.Channel.consultarEstadoSAT(apikey, uuid, rfcEmisor, rfcReceptor, total)
        End Function
        
        Public Function consultarEstadoSATAsync(ByVal apikey As String, ByVal uuid As String, ByVal rfcEmisor As String, ByVal rfcReceptor As String, ByVal total As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaEstatusSAT) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarEstadoSATAsync
            Return MyBase.Channel.consultarEstadoSATAsync(apikey, uuid, rfcEmisor, rfcReceptor, total)
        End Function
        
        Public Function consultarCreditosDisponibles(ByVal apikey As String) As ServiceFacturaXpress.RespuestaCreditos Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarCreditosDisponibles
            Return MyBase.Channel.consultarCreditosDisponibles(apikey)
        End Function
        
        Public Function consultarCreditosDisponiblesAsync(ByVal apikey As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCreditos) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarCreditosDisponiblesAsync
            Return MyBase.Channel.consultarCreditosDisponiblesAsync(apikey)
        End Function
        
        Public Function consultarCfdisRelacionados(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal rfcEmisor As String) As ServiceFacturaXpress.RespuestaRelacionados Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarCfdisRelacionados
            Return MyBase.Channel.consultarCfdisRelacionados(apikey, keyPEM, cerPEM, uuid, rfcEmisor)
        End Function
        
        Public Function consultarCfdisRelacionadosAsync(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal rfcEmisor As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaRelacionados) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarCfdisRelacionadosAsync
            Return MyBase.Channel.consultarCfdisRelacionadosAsync(apikey, keyPEM, cerPEM, uuid, rfcEmisor)
        End Function
        
        Public Function consultarAutorizacionesPendientes(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String) As ServiceFacturaXpress.RespuestaPendientes Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarAutorizacionesPendientes
            Return MyBase.Channel.consultarAutorizacionesPendientes(apikey, keyPEM, cerPEM)
        End Function
        
        Public Function consultarAutorizacionesPendientesAsync(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaPendientes) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.consultarAutorizacionesPendientesAsync
            Return MyBase.Channel.consultarAutorizacionesPendientesAsync(apikey, keyPEM, cerPEM)
        End Function
        
        Public Function autorizarCancelacion(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal respuesta As String) As ServiceFacturaXpress.RespuestaAutorizar Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.autorizarCancelacion
            Return MyBase.Channel.autorizarCancelacion(apikey, keyPEM, cerPEM, uuid, respuesta)
        End Function
        
        Public Function autorizarCancelacionAsync(ByVal apikey As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal uuid As String, ByVal respuesta As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaAutorizar) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.autorizarCancelacionAsync
            Return MyBase.Channel.autorizarCancelacionAsync(apikey, keyPEM, cerPEM, uuid, respuesta)
        End Function
        
        Public Function timbrarRetencion(ByVal apikey As String, ByVal xml As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarRetencion
            Return MyBase.Channel.timbrarRetencion(apikey, xml)
        End Function
        
        Public Function timbrarRetencionAsync(ByVal apikey As String, ByVal xml As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarRetencionAsync
            Return MyBase.Channel.timbrarRetencionAsync(apikey, xml)
        End Function
        
        Public Function timbrarRetencionTFD(ByVal apikey As String, ByVal xml As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarRetencionTFD
            Return MyBase.Channel.timbrarRetencionTFD(apikey, xml)
        End Function
        
        Public Function timbrarRetencionTFDAsync(ByVal apikey As String, ByVal xml As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarRetencionTFDAsync
            Return MyBase.Channel.timbrarRetencionTFDAsync(apikey, xml)
        End Function
        
        Public Function timbrarRetencionJSON(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As ServiceFacturaXpress.RespuestaTimbrado Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarRetencionJSON
            Return MyBase.Channel.timbrarRetencionJSON(apikey, jsonB64, keyPEM, cerPEM, plantilla)
        End Function
        
        Public Function timbrarRetencionJSONAsync(ByVal apikey As String, ByVal jsonB64 As String, ByVal keyPEM As String, ByVal cerPEM As String, ByVal plantilla As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbrado) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarRetencionJSONAsync
            Return MyBase.Channel.timbrarRetencionJSONAsync(apikey, jsonB64, keyPEM, cerPEM, plantilla)
        End Function
        
        Public Function cancelarRetencionCSD(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal rfcEmisor As String, ByVal uuid As String, ByVal motivo As String, ByVal folioSustitucion As String) As ServiceFacturaXpress.RespuestaCancelar Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarRetencionCSD
            Return MyBase.Channel.cancelarRetencionCSD(apikey, keyCSD, cerCSD, passCSD, rfcEmisor, uuid, motivo, folioSustitucion)
        End Function
        
        Public Function cancelarRetencionCSDAsync(ByVal apikey As String, ByVal keyCSD As String, ByVal cerCSD As String, ByVal passCSD As String, ByVal rfcEmisor As String, ByVal uuid As String, ByVal motivo As String, ByVal folioSustitucion As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarRetencionCSDAsync
            Return MyBase.Channel.cancelarRetencionCSDAsync(apikey, keyCSD, cerCSD, passCSD, rfcEmisor, uuid, motivo, folioSustitucion)
        End Function
        
        Public Function timbrarSP(ByVal apikey As String, ByVal xmlCFDI As String) As ServiceFacturaXpress.RespuestaTimbradoSP Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarSP
            Return MyBase.Channel.timbrarSP(apikey, xmlCFDI)
        End Function
        
        Public Function timbrarSPAsync(ByVal apikey As String, ByVal xmlCFDI As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaTimbradoSP) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.timbrarSPAsync
            Return MyBase.Channel.timbrarSPAsync(apikey, xmlCFDI)
        End Function
        
        Public Function cancelarSP(ByVal apikey As String, ByVal rfcEmisor As String, ByVal uuid As String) As ServiceFacturaXpress.RespuestaCancelar Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarSP
            Return MyBase.Channel.cancelarSP(apikey, rfcEmisor, uuid)
        End Function
        
        Public Function cancelarSPAsync(ByVal apikey As String, ByVal rfcEmisor As String, ByVal uuid As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaCancelar) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.cancelarSPAsync
            Return MyBase.Channel.cancelarSPAsync(apikey, rfcEmisor, uuid)
        End Function
        
        Public Function validar(ByVal apikey As String, ByVal xmlCFDI As String) As ServiceFacturaXpress.RespuestaValidacion Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.validar
            Return MyBase.Channel.validar(apikey, xmlCFDI)
        End Function
        
        Public Function validarAsync(ByVal apikey As String, ByVal xmlCFDI As String) As System.Threading.Tasks.Task(Of ServiceFacturaXpress.RespuestaValidacion) Implements ServiceFacturaXpress.ServicioTimbradoWSPortType.validarAsync
            Return MyBase.Channel.validarAsync(apikey, xmlCFDI)
        End Function
    End Class
End Namespace
